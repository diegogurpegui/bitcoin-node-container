# ------------------------------------------------------------------------------
# Bitcoin node container Environment Template
# Copy this file to .env and edit values as needed.
# Note: Run ./setup.sh to automatically generate secure RPC credentials
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# BITCOIN CORE NODE CONFIGURATION
# ------------------------------------------------------------------------------

# Path to store blockchain data (set to your external drive)
BITCOIN_DATA_PATH=/mnt/external-drive/bitcoin-data

# Container name (optional)
CONTAINER_NAME=bitcoin-core-node

# Ports (optional overrides)
RPC_PORT=8332
P2P_PORT=8333

# RPC Authentication
# IMPORTANT: These credentials are auto-generated by setup.sh using Bitcoin Core's
# official rpcauth.py script (see: https://raspibolt.org/guide/bitcoin/bitcoin-client.html)
# 
# The setup.sh script will:
# 1. Generate a secure random password
# 2. Create an rpcauth hash using rpcauth.py
# 3. Add the rpcauth line to bitcoin.conf (hashed, secure)
# 4. Store the plain password here in .env for bitcoin-cli access
#
# If you need to manually generate credentials:
#   python3 rpcauth.py <username> --json
#
# Never commit this file! It contains your RPC password in plain text.
BITCOIN_RPC_USER=bitcoin
BITCOIN_RPC_PASSWORD=changeme_run_setup_script

# Resource limits (optional, for docker-compose deploy section)
# MEMORY_LIMIT=4G
# CPU_LIMIT=2

# ------------------------------------------------------------------------------
# ELECTRS SERVER CONFIGURATION
# ------------------------------------------------------------------------------

# Path to store Electrs database (set to your external drive)
ELECTRS_DATA_PATH=/mnt/external-drive/electrs

# Container name (optional)
ELECTRS_CONTAINER_NAME=electrs-server

# Resource limits (optional, for docker-compose deploy section)
# ELECTRS_MEMORY_LIMIT=2G
# ELECTRS_CPU_LIMIT=1
